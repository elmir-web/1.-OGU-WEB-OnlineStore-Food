{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB_OGU\\\\client\\\\src\\\\pages\\\\Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport ProductList from \"../components/ProductList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchProducts, fetchTypes } from \"../http/productAPI\";\nimport Pages from \"../components/Pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = observer(_c = _s(() => {\n  _s();\n\n  const {\n    product\n  } = useContext(Context);\n  useEffect(() => {\n    fetchTypes().then(data => product.setTypes(data));\n    fetchBrands().then(data => product.setBrands(data));\n    fetchProducts(null, null, 1, 2).then(data => {\n      product.setProducts(data.rows);\n      product.setTotalCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    fetchProducts(product.selectedType.id, product.selectedBrand.id, product.page, 2).then(data => {\n      product.setProducts(data.rows);\n      product.setTotalCount(data.count);\n    });\n  }, [product.page, product.selectedType, product.selectedBrand]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(BrandBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProductList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}, \"yUPEnqEFSJ4WO8fuytLB5vqrb9Y=\"));\n_c2 = Shop;\nexport default Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"sources":["D:/WEB_OGU/client/src/pages/Shop.js"],"names":["React","useContext","useEffect","Container","Row","Col","TypeBar","BrandBar","ProductList","observer","Context","fetchBrands","fetchProducts","fetchTypes","Pages","Shop","product","then","data","setTypes","setBrands","setProducts","rows","setTotalCount","count","selectedType","id","selectedBrand","page"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,WAAR,EAAqBC,aAArB,EAAoCC,UAApC,QAAqD,oBAArD;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,IAAI,GAAGN,QAAQ,SAAC,MAAM;AAAA;;AACxB,QAAM;AAACO,IAAAA;AAAD,MAAYf,UAAU,CAACS,OAAD,CAA5B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU,GAAGI,IAAb,CAAkBC,IAAI,IAAIF,OAAO,CAACG,QAAR,CAAiBD,IAAjB,CAA1B;AACAP,IAAAA,WAAW,GAAGM,IAAd,CAAmBC,IAAI,IAAIF,OAAO,CAACI,SAAR,CAAkBF,IAAlB,CAA3B;AACAN,IAAAA,aAAa,CAAC,IAAD,EAAO,IAAP,EAAa,CAAb,EAAgB,CAAhB,CAAb,CAAgCK,IAAhC,CAAqCC,IAAI,IAAI;AACzCF,MAAAA,OAAO,CAACK,WAAR,CAAoBH,IAAI,CAACI,IAAzB;AACAN,MAAAA,OAAO,CAACO,aAAR,CAAsBL,IAAI,CAACM,KAA3B;AACH,KAHD;AAIH,GAPQ,EAON,EAPM,CAAT;AASAtB,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,aAAa,CAACI,OAAO,CAACS,YAAR,CAAqBC,EAAtB,EAA0BV,OAAO,CAACW,aAAR,CAAsBD,EAAhD,EAAoDV,OAAO,CAACY,IAA5D,EAAkE,CAAlE,CAAb,CAAkFX,IAAlF,CAAuFC,IAAI,IAAI;AAC3FF,MAAAA,OAAO,CAACK,WAAR,CAAoBH,IAAI,CAACI,IAAzB;AACAN,MAAAA,OAAO,CAACO,aAAR,CAAsBL,IAAI,CAACM,KAA3B;AACH,KAHD;AAIH,GALQ,EAKN,CAACR,OAAO,CAACY,IAAT,EAAeZ,OAAO,CAACS,YAAvB,EAAqCT,OAAO,CAACW,aAA7C,CALM,CAAT;AAOA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,gCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAjCoB,kCAArB;MAAMZ,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport ProductList from \"../components/ProductList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchProducts, fetchTypes} from \"../http/productAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {product} = useContext(Context);\n\n    useEffect(() => {\n        fetchTypes().then(data => product.setTypes(data));\n        fetchBrands().then(data => product.setBrands(data));\n        fetchProducts(null, null, 1, 2).then(data => {\n            product.setProducts(data.rows);\n            product.setTotalCount(data.count);\n        });\n    }, []);\n\n    useEffect(() => {\n        fetchProducts(product.selectedType.id, product.selectedBrand.id, product.page, 2).then(data => {\n            product.setProducts(data.rows);\n            product.setTotalCount(data.count);\n        });\n    }, [product.page, product.selectedType, product.selectedBrand,]);\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <ProductList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}