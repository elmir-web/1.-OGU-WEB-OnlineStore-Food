[{"D:\\WEB_OGU\\client\\src\\index.js":"1","D:\\WEB_OGU\\client\\src\\App.js":"2","D:\\WEB_OGU\\client\\src\\store\\UserStore.js":"3","D:\\WEB_OGU\\client\\src\\http\\userAPI.js":"4","D:\\WEB_OGU\\client\\src\\components\\AppRouter.js":"5","D:\\WEB_OGU\\client\\src\\components\\NavBar.js":"6","D:\\WEB_OGU\\client\\src\\routes.js":"7","D:\\WEB_OGU\\client\\src\\http\\index.js":"8","D:\\WEB_OGU\\client\\src\\utils\\consts.js":"9","D:\\WEB_OGU\\client\\src\\pages\\Auth.js":"10","D:\\WEB_OGU\\client\\src\\pages\\Basket.js":"11","D:\\WEB_OGU\\client\\src\\pages\\Shop.js":"12","D:\\WEB_OGU\\client\\src\\pages\\Admin.js":"13","D:\\WEB_OGU\\client\\src\\components\\Pages.js":"14","D:\\WEB_OGU\\client\\src\\components\\TypeBar.js":"15","D:\\WEB_OGU\\client\\src\\components\\BrandBar.js":"16","D:\\WEB_OGU\\client\\src\\components\\modals\\CreateType.js":"17","D:\\WEB_OGU\\client\\src\\components\\modals\\CreateBrand.js":"18","D:\\WEB_OGU\\client\\src\\pages\\ProductPage.js":"19","D:\\WEB_OGU\\client\\src\\http\\productAPI.js":"20","D:\\WEB_OGU\\client\\src\\components\\ProductItem.js":"21","D:\\WEB_OGU\\client\\src\\components\\ProductList.js":"22","D:\\WEB_OGU\\client\\src\\store\\ProductStore.js":"23","D:\\WEB_OGU\\client\\src\\components\\modals\\CreateProduct.js":"24"},{"size":444,"mtime":1622282422794,"results":"25","hashOfConfig":"26"},{"size":867,"mtime":1622282390383,"results":"27","hashOfConfig":"26"},{"size":408,"mtime":1622282341732,"results":"28","hashOfConfig":"26"},{"size":707,"mtime":1622282191356,"results":"29","hashOfConfig":"26"},{"size":797,"mtime":1622282080536,"results":"30","hashOfConfig":"26"},{"size":1857,"mtime":1622281064324,"results":"31","hashOfConfig":"26"},{"size":781,"mtime":1622282436062,"results":"32","hashOfConfig":"26"},{"size":411,"mtime":1622282126102,"results":"33","hashOfConfig":"26"},{"size":236,"mtime":1622282357121,"results":"34","hashOfConfig":"26"},{"size":3152,"mtime":1622282275504,"results":"35","hashOfConfig":"26"},{"size":146,"mtime":1611985807000,"results":"36","hashOfConfig":"26"},{"size":1571,"mtime":1622282330064,"results":"37","hashOfConfig":"26"},{"size":1554,"mtime":1622282236777,"results":"38","hashOfConfig":"26"},{"size":810,"mtime":1622282080526,"results":"39","hashOfConfig":"26"},{"size":757,"mtime":1622282126090,"results":"40","hashOfConfig":"26"},{"size":763,"mtime":1622279468508,"results":"41","hashOfConfig":"26"},{"size":1360,"mtime":1622282080532,"results":"42","hashOfConfig":"26"},{"size":1377,"mtime":1622282029105,"results":"43","hashOfConfig":"26"},{"size":2246,"mtime":1622282275508,"results":"44","hashOfConfig":"26"},{"size":1024,"mtime":1622282170718,"results":"45","hashOfConfig":"26"},{"size":1104,"mtime":1622282126093,"results":"46","hashOfConfig":"26"},{"size":504,"mtime":1622282126097,"results":"47","hashOfConfig":"26"},{"size":1332,"mtime":1622282330060,"results":"48","hashOfConfig":"26"},{"size":6134,"mtime":1622282029111,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d4clo7",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},"D:\\WEB_OGU\\client\\src\\index.js",[],"D:\\WEB_OGU\\client\\src\\App.js",["106"],"D:\\WEB_OGU\\client\\src\\store\\UserStore.js",[],["107","108"],"D:\\WEB_OGU\\client\\src\\http\\userAPI.js",[],"D:\\WEB_OGU\\client\\src\\components\\AppRouter.js",[],"D:\\WEB_OGU\\client\\src\\components\\NavBar.js",[],"D:\\WEB_OGU\\client\\src\\routes.js",[],"D:\\WEB_OGU\\client\\src\\http\\index.js",[],"D:\\WEB_OGU\\client\\src\\utils\\consts.js",[],"D:\\WEB_OGU\\client\\src\\pages\\Auth.js",["109"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context);\n    const location = useLocation();\n    const history = useHistory();\n    const isLogin = location.pathname === LOGIN_ROUTE;\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(user);\n            user.setIsAuth(true);\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message);\n        }\n\n    };\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","D:\\WEB_OGU\\client\\src\\pages\\Basket.js",[],"D:\\WEB_OGU\\client\\src\\pages\\Shop.js",["110","111"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport ProductList from \"../components/ProductList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchProducts, fetchTypes} from \"../http/productAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {product} = useContext(Context);\n\n    useEffect(() => {\n        fetchTypes().then(data => product.setTypes(data));\n        fetchBrands().then(data => product.setBrands(data));\n        fetchProducts(null, null, 1, 2).then(data => {\n            product.setProducts(data.rows);\n            product.setTotalCount(data.count);\n        });\n    }, []);\n\n    useEffect(() => {\n        fetchProducts(product.selectedType.id, product.selectedBrand.id, product.page, 2).then(data => {\n            product.setProducts(data.rows);\n            product.setTotalCount(data.count);\n        });\n    }, [product.page, product.selectedType, product.selectedBrand,]);\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <ProductList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","D:\\WEB_OGU\\client\\src\\pages\\Admin.js",[],"D:\\WEB_OGU\\client\\src\\components\\Pages.js",[],"D:\\WEB_OGU\\client\\src\\components\\TypeBar.js",["112"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {product} = useContext(Context);\n    return (\n        <ListGroup>\n            {product.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === product.selectedType.id}\n                    onClick={() => product.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","D:\\WEB_OGU\\client\\src\\components\\BrandBar.js",[],"D:\\WEB_OGU\\client\\src\\components\\modals\\CreateType.js",[],"D:\\WEB_OGU\\client\\src\\components\\modals\\CreateBrand.js",["113"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/productAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('');\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('');\n            onHide();\n        });\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","D:\\WEB_OGU\\client\\src\\pages\\ProductPage.js",["114"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {fetchOneProduct} from \"../http/productAPI\";\n\nconst ProductPage = () => {\n    const [product, setProduct] = useState({info: []});\n    const {id} = useParams();\n    useEffect(() => {\n        fetchOneProduct(id).then(data => setProduct(data));\n    }, []);\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + product.img}/>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>{product.name}</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {product.rating}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\n                    >\n                        <h3>От: {product.price} руб.</h3>\n                        <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"d-flex flex-column m-3\">\n                <h1>Характеристики</h1>\n                {product.info.map((info, index) =>\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\n                        {info.title}: {info.description}\n                    </Row>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\nexport default ProductPage;\n","D:\\WEB_OGU\\client\\src\\http\\productAPI.js",["115"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type);\n    return data;\n};\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type');\n    return data;\n};\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand);\n    return data;\n};\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', );\n    return data;\n};\n\nexport const createProduct = async (product) => {\n    const {data} = await $authHost.post('api/product', product);\n    return data;\n};\n\nexport const fetchProducts = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/product', {params: {\n            typeId, brandId, page, limit\n        }});\n    return data;\n};\n\nexport const fetchOneProduct = async (id) => {\n    const {data} = await $host.get('api/product/' + id);\n    return data;\n};\n","D:\\WEB_OGU\\client\\src\\components\\ProductItem.js",[],"D:\\WEB_OGU\\client\\src\\components\\ProductList.js",[],"D:\\WEB_OGU\\client\\src\\store\\ProductStore.js",[],"D:\\WEB_OGU\\client\\src\\components\\modals\\CreateProduct.js",["116","117"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createProduct, fetchBrands, fetchProducts, fetchTypes} from \"../../http/productAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateProduct = observer(({show, onHide}) => {\n    const {product} = useContext(Context);\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [file, setFile] = useState(null);\n    const [info, setInfo] = useState([]);\n\n    useEffect(() => {\n        fetchTypes().then(data => product.setTypes(data))\n        fetchBrands().then(data => product.setBrands(data))\n    }, []);\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}]);\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number));\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i));\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0]);\n    }\n\n    const addProduct = () => {\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('price', `${price}`);\n        formData.append('img', file);\n        formData.append('brandId', product.selectedBrand.id);\n        formData.append('typeId', product.selectedType.id);\n        formData.append('info', JSON.stringify(info));\n        createProduct(formData).then(data => onHide());\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить продукт\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{product.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {product.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => product.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{product.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {product.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => product.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название продукта\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость продукта\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addProduct}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateProduct;\n",{"ruleId":"118","severity":1,"message":"119","line":19,"column":8,"nodeType":"120","endLine":19,"endColumn":10,"suggestions":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":26,"column":17,"nodeType":"128","messageId":"129","endLine":26,"endColumn":21},{"ruleId":"118","severity":1,"message":"130","line":23,"column":8,"nodeType":"120","endLine":23,"endColumn":10,"suggestions":"131"},{"ruleId":"118","severity":1,"message":"130","line":30,"column":8,"nodeType":"120","endLine":30,"endColumn":68,"suggestions":"132"},{"ruleId":"126","severity":1,"message":"133","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":11},{"ruleId":"126","severity":1,"message":"134","line":4,"column":22,"nodeType":"128","messageId":"129","endLine":4,"endColumn":32},{"ruleId":"118","severity":1,"message":"135","line":12,"column":8,"nodeType":"120","endLine":12,"endColumn":10,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"137","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":18},{"ruleId":"126","severity":1,"message":"138","line":5,"column":37,"nodeType":"128","messageId":"129","endLine":5,"endColumn":50},{"ruleId":"118","severity":1,"message":"130","line":18,"column":8,"nodeType":"120","endLine":18,"endColumn":10,"suggestions":"139"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["140"],"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array.",["143"],["144"],"'Col' is defined but never used.","'createType' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["145"],"'jwt_decode' is defined but never used.","'fetchProducts' is defined but never used.",["146"],{"desc":"147","fix":"148"},"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"149","fix":"155"},"Update the dependencies array to be: [user]",{"range":"156","text":"157"},"Update the dependencies array to be: [product]",{"range":"158","text":"159"},"Update the dependencies array to be: [product.page, product.selectedType, product.selectedBrand, product]",{"range":"160","text":"161"},"Update the dependencies array to be: [id]",{"range":"162","text":"163"},{"range":"164","text":"159"},[646,648],"[user]",[892,894],"[product]",[1135,1195],"[product.page, product.selectedType, product.selectedBrand, product]",[467,469],"[id]",[759,761]]